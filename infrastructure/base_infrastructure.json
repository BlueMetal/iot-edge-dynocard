{
  "$schema":
    "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "databaseAdminUsername": {
      "type": "string",
      "defaultValue": "azuser"
    },
    "databaseAdminPassword": {
      "type": "securestring"
    },
    "databaseCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "databaseName": {
      "type": "string"
    },
    "databaseEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "System",
        "Free",
        "Basic",
        "Standard",
        "Premium",
        "DataWarehouse",
        "Stretch"
      ]
    },
    "databaseServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "System",
        "System0",
        "System1",
        "System2",
        "System3",
        "System4",
        "System2L",
        "System3L",
        "System4L",
        "Free",
        "Basic",
        "S0",
        "S1",
        "S2",
        "S3",
        "S4",
        "S6",
        "S7",
        "S9",
        "S12",
        "P1",
        "P2",
        "P4",
        "P6",
        "P11",
        "P15",
        "DW100",
        "DW200",
        "DW300",
        "DW400",
        "DW500",
        "DW600",
        "DW1000",
        "DW1200",
        "DW1000c",
        "DW1500",
        "DW1500c",
        "DW2000",
        "DW2000c",
        "DW3000",
        "DW2500c",
        "DW3000c",
        "DW6000",
        "DW5000c",
        "DW6000c",
        "DW7500c",
        "DW10000c",
        "DW15000c",
        "DW30000c",
        "DS100",
        "DS200",
        "DS300",
        "DS400",
        "DS500",
        "DS600",
        "DS1000",
        "DS1200",
        "DS1500",
        "DS2000"
      ]
    },
    "databaseMaxSizeBytes": {
      "type": "string",
      "defaultValue": "2147483648"
    },
    "databaseServerName": {
      "type": "string"
    },
    "databaseZoneRedundancy": {
      "type": "bool",
      "defaultValue": false
    },
    "dataLakeStoreName": {
      "type": "string"
    },
    "serviceBusNamespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus namespace"
      }
    },
    "serviceBusQueueName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Queue"
      }
    },
    "iotHubName": {
      "type": "string",
      "metadata": {
        "description": "IoT Hub Name"
      }
    },
    "iotHubSkuName": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
        "description": "IoT Hub SKU name"
      },
      "allowedValues": ["F1", "S1", "S2", "S3"]
    },
    "iotHubSkuUnits": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "Non-Zero number of IoT Hub message units"
      }
    },
    "iotHubD2cPartitions": {
      "type": "string",
      "defaultValue": "2",
      "metadata": {
        "description":
          "Number of IoT Hub device-to-cloud message partitons (value must be 2 or greater)"
      }
    },
    "iotHubFeatures": {
      "type": "string",
      "defaultValue": "None"
    },
    "logicAppWorkflowName": {
      "type": "string"
    },
    "streamAnalyticsJobName": {
      "type": "string"
    },
    "appSvcName": {
      "type": "string",
      "maxLength": 15
    },
    "appSvcPlanSku": {
      "type": "string",
      "maxLength": 15,
      "defaultValue": "S1"
    }
  },
  "variables": {
    "serviceBusDefaultSASKeyName": "RootManageSharedAccessKey",
    "serviceBusAuthRuleResourceId":
      "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), variables('serviceBusDefaultSASKeyName'))]",
    "appSvcPlanName": "[concat(parameters('appSvcName'),'-svcplan')]"
  },
  "resources": [
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2015-05-01-preview",
      "name": "[parameters('databaseServerName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "administratorLogin": "[parameters('databaseAdminUsername')]",
        "administratorLoginPassword": "[parameters('databaseAdminPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('databaseServerName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "[parameters('databaseName')]",
          "properties": {
            "collation": "[parameters('databaseCollation')]",
            "edition": "[parameters('databaseEdition')]",
            "maxSizeBytes": "[parameters('databaseMaxSizeBytes')]",
            "requestedServiceObjectiveName":
              "[parameters('databaseServiceObjectiveName')]",
            "zoneRedundant": "[parameters('databaseZoneRedundancy')]"
          },
          "type": "databases"
        },
        {
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('databaseServerName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "type": "firewallrules"
        }
      ]
    },
    {
      "type": "Microsoft.DataLakeStore/accounts",
      "apiVersion": "2016-11-01",
      "name": "[parameters('dataLakeStoreName')]",
      "location": "eastus2",
      "properties": {
        "newTier": "Consumption",
        "encryptionState": "Enabled",
        "encryptionConfig": {
          "type": "ServiceManaged"
        }
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[parameters('serviceBusNamespaceName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {},
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[parameters('serviceBusQueueName')]",
          "type": "Queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": "1024",
            "requiresDuplicateDetection": "false",
            "requiresSession": "false",
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "deadLetteringOnMessageExpiration": "false",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": "10",
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": "false",
            "enableExpress": "false"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2017-07-01",
      "name": "[parameters('iotHubName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
      ],
      "properties": {
        "operationsMonitoringProperties": {
          "events": {
            "None": "None",
            "Connections": "None",
            "DeviceTelemetry": "None",
            "C2DCommands": "None",
            "DeviceIdentityOperations": "None",
            "FileUploadOperations": "None",
            "Routes": "None"
          }
        },
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 1,
            "partitionCount": "[parameters('iotHubD2cPartitions')]"
          },
          "operationsMonitoringEvents": {
            "retentionTimeInDays": 1,
            "partitionCount": "[parameters('iotHubD2cPartitions')]"
          }
        },
        "routing": {
          "endpoints": {
            "serviceBusQueues": [
              {
                "name": "dynocard-output",
                "connectionString":
                  "[concat(listkeys(variables('serviceBusAuthRuleResourceId'), '2017-04-01').primaryConnectionString,';EntityPath=dynocard-output')]",
                "resourceGroup": "[resourceGroup().name]",
                "subscriptionId": "[subscription().subscriptionId]"
              }
            ]
          },
          "routes": [
            {
              "name": "IoTHubLoopback",
              "source": "DeviceMessages",
              "condition": "true",
              "endpointNames": ["events"],
              "isEnabled": true
            },
            {
              "name": "MessageProcessing",
              "source": "DeviceMessages",
              "condition": "true",
              "endpointNames": ["dynocard-output"],
              "isEnabled": true
            }
          ],
          "fallbackRoute": {
            "name": "$fallback",
            "source": "DeviceMessages",
            "condition": "true",
            "endpointNames": ["events"],
            "isEnabled": false
          }
        },
        "storageEndpoints": {
          "$default": {
            "sasTtlAsIso8601": "PT1H",
            "connectionString": "",
            "containerName": ""
          }
        },
        "enableFileUploadNotifications": false,
        "cloudToDevice": {
          "maxDeliveryCount": 10,
          "defaultTtlAsIso8601": "PT1H",
          "feedback": {
            "lockDurationAsIso8601": "PT1M",
            "ttlAsIso8601": "PT1H",
            "maxDeliveryCount": 10
          }
        },
        "features": "[parameters('iotHubFeatures')]"
      },
      "sku": {
        "name": "[parameters('iotHubSkuName')]",
        "capacity": "[parameters('iotHubSkuUnits')]"
      }
    },
    {
      "apiVersion": "2016-02-03",
      "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups",
      "name": "[concat(parameters('iotHubName'), '/events/IoTHubLoopback')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Devices/iothubs/', parameters('iotHubName'))]"
      ]
    },
    {
      "apiVersion": "2016-02-03",
      "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups",
      "name": "[concat(parameters('iotHubName'), '/events/MessageProcessing')]",
      "dependsOn": [
        "[concat('Microsoft.Devices/iothubs/', parameters('iotHubName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2017-08-01",
      "kind": "app",
      "name": "[variables('appSvcPlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('appSvcPlanSku')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "kind": "app",
      "name": "[parameters('appSvcName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "serverFarmId":
          "[resourceId('Microsoft.Web/serverfarms', variables('appSvcPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appSvcPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "name": "servicebus",
      "dependsOn": [
        "[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
      ],
      "properties": {
        "api": {
          "id":
            "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/servicebus')]"
        },
        "displayName": "servicebus",
        "parameterValues": {
          "connectionString":
            "[listkeys(variables('serviceBusAuthRuleResourceId'), '2017-04-01').primaryConnectionString]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('logicAppWorkflowName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', 'servicebus')]",
        "[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
      ],
      "properties": {
        "definition": {
          "$schema":
            "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_message_is_received_in_a_queue_(auto-complete)": {
              "inputs": {
                "host": {
                  "connection": {
                    "name":
                      "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "get",
                "path":
                  "/@{encodeURIComponent(encodeURIComponent('dynocard-output'))}/messages/head",
                "queries": {
                  "queueType": "Main"
                }
              },
              "recurrence": {
                "frequency": "Second",
                "interval": 10
              },
              "type": "ApiConnection"
            }
          },
          "actions": {
            "HTTP": {
              "inputs": {
                "body":
                  "@substring(base64ToString(triggerBody()?['ContentData']), indexof(base64ToString(triggerBody()?['ContentData']), '{'), sub(add(lastindexof(base64ToString(triggerBody()?['ContentData']), '}'),1),indexof(base64ToString(triggerBody()?['ContentData']),'{')))",
                "headers": {
                  "Content-Type": "application/json"
                },
                "method": "POST",
                "uri":
                  "[concat('http://',reference(resourceId('Microsoft.Web/sites', parameters('appSvcName'))).defaultHostName,'/api/dynocard')]"
              },
              "runAfter": {},
              "type": "Http"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus": {
                "id":
                  "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/servicebus')]",
                "connectionId":
                  "[resourceId('Microsoft.Web/connections', 'servicebus')]"
              }
            }
          }
        }
      }
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[parameters('streamAnalyticsJobName')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "dependsOn": [
        "[concat('Microsoft.Devices/IotHubs/', parameters('iotHubName'))]"
      ],
      "properties": {
        "sku": {
          "name": "standard"
        },
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [
          {
            "Name": "IoTHub",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "iotHubNamespace": "[parameters('iothubname')]",
                  "sharedAccessPolicyKey":
                    "[listkeys(resourceId('Microsoft.Devices/IotHubs/IotHubKeys',parameters('iothubname'), 'iothubowner'),'2016-02-03').primaryKey]",
                  "sharedAccessPolicyName": "iothubowner",
                  "endpoint": "messages/events"
                },
                "Type": "Microsoft.Devices/IotHubs"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8"
                },
                "Type": "Json"
              },
              "Type": "Stream"
            }
          }
        ],
        "outputs": [
          {
            "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
            "name": "DataLake",
            "apiVersion": "2016-03-01",
            "scale": null,
            "properties": {
              "datasource": {
                "type": "[concat('Microsoft.DataLake/Accounts')]",
                "properties": {
                  "filePathPrefix": "dynocards/{date}",
                  "accountName": "[parameters('dataLakeStoreName')]",
                  "tenantId": "6c637512-c417-4e78-9d62-b61258e4b619",
                  "dateFormat": "yyyy-MM-dd",
                  "timeFormat": "HH",
                  "refreshToken": "PLACEHOLDER_DO_NOT_REMOVE",
                  "accessToken": null
                }
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              }
            }
          }
        ],
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": 1,
            "query":
              "SELECT\r\n    *\r\nINTO\r\n    [datalake]\r\nFROM\r\n    [iot]"
          }
        }
      }
    }
  ],
  "outputs": {
    "dynocardDbServerName": {
      "type": "string",
      "value":
        "[reference(resourceId('Microsoft.Sql/servers', parameters('databaseServerName'))).fullyQualifiedDomainName]"
    },
    "dynocardDbName": {
      "type": "string",
      "value": "[parameters('databaseName')]"
    },
    "dynocardDbAdminUsername": {
      "type": "string",
      "value": "[parameters('databaseAdminUsername')]"
    },
    "dynocardDbAdminPassword": {
      "type": "string",
      "value": "[parameters('databaseAdminPassword')]"
    },
    "serviceBusNamespaceConnectionString": {
      "type": "string",
      "value":
        "[listkeys(variables('serviceBusAuthRuleResourceId'), '2017-04-01').primaryConnectionString]"
    },
    "serviceBusSharedAccessPolicyPrimaryKey": {
      "type": "string",
      "value":
        "[listkeys(variables('serviceBusAuthRuleResourceId'), '2017-04-01').primaryKey]"
    },
    "apiUri": {
      "type": "string",
      "value":
        "[concat('http://',reference(resourceId('Microsoft.Web/sites', parameters('appSvcName'))).defaultHostName,'/api/dynocard')]"
    }
  }
}
